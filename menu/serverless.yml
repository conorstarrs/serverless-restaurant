service: serverless-cqrs-menu

plugins:
  - serverless-offline-sns
  - serverless-dynamodb-local
  - serverless-offline #serverless-offline needs to be last in the list

custom:
  dynamodb:
    start:
      migrate: true
  serverless-offline-sns:
    port: 4002
    debug: true
  serverless-offline:
    babelOptions:
      presets: ["env"]

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - "sns:*"
      Resource:
        - { "Fn::GetAtt": ["MenuEventsDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["MenuMenuItemsDynamoDBTable", "Arn" ] }
        - "arn:aws:sns:us-east-1:${ssm:accountId}:menu-events"
  environment:
    TOPIC_NAME: 'menu-events'
    AWS_ACCOUNT_ID: '${ssm:accountId}'
    EVENTS_TABLE: 'menu-events-table-${self:provider.stage}'
    MENU_ITEMS_TABLE: 'menu-menu-items-table-${self:provider.stage}'

functions:
  handleCommand:
    handler: lib/commands.handler
    events:
      - http: 'POST /commands'

  handleQuery:
    handler: lib/queries.handler
    events:
      - http: 'GET /menu/items/'
      - http: 'GET /menu/items/{proxy+}'

  persistEvent:
    handler: lib/listeners.persistEvent
    events:
      - sns:
          topicName: menu-events
          displayName: "Menu domain events"

  persistMenuItem:
    handler: lib/listeners.persistMenuItem
    events:
      - sns:
          topicName: menu-events
          displayName: "Menu domain events"

resources:
  Resources:
    MenuEventsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: 'menu-events-table-${self:provider.stage}'
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    MenuMenuItemsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: 'menu-menu-items-table-${self:provider.stage}'
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
